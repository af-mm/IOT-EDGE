version: "3.7"
services:

# cloud Kafka broker

  cloud-zookeeper:
    image: 'bitnami/zookeeper'
#    ports:
#      - '${CLOUD_ZOOKEEPER_EXT_PORT}:2181'
    volumes:
      - './data/cloud-zookeeper:/bitnami:rw'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  cloud-kafka:
    image: 'bitnami/kafka'
    ports:
      - '${CLOUD_KAFKA_INT_PORT}:${CLOUD_KAFKA_INT_PORT}'
      - '${CLOUD_KAFKA_EXT_PORT}:${CLOUD_KAFKA_EXT_PORT}'
    volumes:
      - './data/cloud-kafka:/bitnami:rw'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=cloud-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${CLOUD_KAFKA_INT_PORT},PLAINTEXT_HOST://:${CLOUD_KAFKA_EXT_PORT}
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://cloud-kafka:${CLOUD_KAFKA_INT_PORT},PLAINTEXT_HOST://localhost:${CLOUD_KAFKA_EXT_PORT}
    depends_on:
      - cloud-zookeeper
      
# edge Kafka broker

  edge-zookeeper:
    image: 'bitnami/zookeeper'
#    ports:
#      - '${EDGE_ZOOKEEPER_EXT_PORT}:2181'
    volumes:
      - './data/edge-zookeeper:/bitnami:rw'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      
  edge-kafka:
    image: 'bitnami/kafka'
    ports:
      - '${EDGE_KAFKA_INT_PORT}:${EDGE_KAFKA_INT_PORT}'
      - '${EDGE_KAFKA_EXT_PORT}:${EDGE_KAFKA_EXT_PORT}'
    volumes:
      - './data/edge-kafka:/bitnami:rw'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=edge-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${EDGE_KAFKA_INT_PORT},PLAINTEXT_HOST://:${EDGE_KAFKA_EXT_PORT}
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://edge-kafka:${EDGE_KAFKA_INT_PORT},PLAINTEXT_HOST://localhost:${EDGE_KAFKA_EXT_PORT}
    depends_on:
      - edge-zookeeper
      
# kafka-repeater from cloud to edge

  input-repeater:
    build: ./kafka-repeater
    image: iot-edge-kafka-repeater
    environment:
      - KR_HOST_FROM=cloud-kafka
      - KR_PORT_FROM=${CLOUD_KAFKA_INT_PORT}
#      - KR_GROUP_ID_FROM=123
      - KR_HOST_TO=edge-kafka
      - KR_PORT_TO=${EDGE_KAFKA_INT_PORT}
      - KR_TOPIC_FROM=${CLOUD_KAFKA_INPUT_TOPIC}
      - KR_TOPIC_TO=edge-input
    depends_on:
      - cloud-kafka
      - edge-kafka
      
# kafka-repeater from edge to cloud

  output-repeater:
    image: iot-edge-kafka-repeater
    environment:
      - KR_HOST_FROM=edge-kafka
      - KR_PORT_FROM=${EDGE_KAFKA_INT_PORT}
#      - KR_GROUP_ID_FROM=123
      - KR_HOST_TO=cloud-kafka
      - KR_PORT_TO=${CLOUD_KAFKA_INT_PORT}
      - KR_TOPIC_FROM=edge-output
      - KR_TOPIC_TO=${CLOUD_KAFKA_OUTPUT_TOPIC}
    depends_on:
      - cloud-kafka
      - edge-kafka

# kafka-converter from edge to devices

  input-converter:
    build: ./kafka-converter
    image: iot-edge-kafka-converter
    environment:
      - KC_HOST=edge-kafka
      - KC_PORT=${EDGE_KAFKA_INT_PORT}
#      - KC_GROUP_ID=123
      - KC_MAP=FORWARD_MAP
      - KC_TOPICS=edge-input
    depends_on:
      - edge-kafka

# kafka-converter from devices to edge

  output-converter:
    image: iot-edge-kafka-converter
    environment:
      - KC_HOST=edge-kafka
      - KC_PORT=${EDGE_KAFKA_INT_PORT}
#      - KC_GROUP_ID=123
      - KC_MAP=BACKWARD_MAP
      - KC_TOPICS=mqtt-output,modbus-output
    depends_on:
      - edge-kafka

# MQTT broker

  mqtt-broker:
    image: eclipse-mosquitto
    ports:
      - "${EDGE_MQTT_BROKER_PORT}:1883"

# Kafka MQTT connector

  mqtt-connector:
    build: ./kafka-mqtt-connector
    image: iot-edge-kafka-mqtt-connector
    environment:
      - KMC_KAFKA_HOST=edge-kafka
      - KMC_KAFKA_PORT=${EDGE_KAFKA_INT_PORT}
#      - KMC_KAFKA_GROUP_ID=123
      - KMC_MQTT_HOST=mqtt-broker
      - KMC_MQTT_PORT=${EDGE_MQTT_BROKER_PORT}
      - KMC_KAFKA_INPUT_TOPIC=mqtt-input
      - KMC_KAFKA_OUTPUT_TOPIC=mqtt-output
    depends_on:
      - edge-kafka
      - mqtt-broker
  


